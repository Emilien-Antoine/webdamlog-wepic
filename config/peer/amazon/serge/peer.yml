# Gather here most of the useful parameter for a given peer
development: &base
  # Manager settings:
  # the manager who launched the peer,
  # or the manager itself if the current peer is a manager
  manager:
    ip: ec2-54-224-165-123.compute-1.amazonaws.com
    # default value in WLSetup is 4000 if no flag given
    manager_port:
    manager_waiting_port:
    # Choose a prefered port to spawn peer if not available, find_port will look for others
    default_spawn_port : 10000

  # First peer to spawn
  # A special name is manager to spawn a lightweight server used to launch other peers
  peer:
    # name for the current peer, could be overrride by the ENV['USERNAME'] variable
    username: manager
    protocol: http
    ip: ec2-54-224-165-123.compute-1.amazonaws.com
    # store the port on which the web server listen for requests, you can give a
    # default value to this otherwise find_port if not available or by the manager
    # default_spawn_port if this peer has been launched by a manager
    web_port: 4000
    # default value for the port on which the webdamlog engine listen although it
    # will be defined by find_port if not available or by the manager
    # default_spawn_port if this peer has been launched by a manager
    wdl_engine_port:
    #Which program is loaded by default by the peer.
    #app/assets/wlprogram/bootstrap_program.wl
    program:
      file_path: config/peer/amazon/serge/bootstrap_program.wl
      query_sample: config/scenario/samples/query/sample.yml
      sigmod_peer: config/peer/amazon/serge
      
test:
  communication:
    manager_port : 4100
    default_spawn_port : 30000
  peer:
    username: manager
    protocol : http
    ip : localhost
    web_port : 10000
    wdl_engine_port : 20000
    program:
      file_path: test/config/bootstrap_for_test.wl
      query_sample: test/config/sample.yml
  manager:
    ip: localhost  
    manager_port:
    manager_waiting_port:
    default_spawn_port : 10000

production:
  # Manager settings:
  # the manager who launched the peer,
  # or the manager itself if the current peer is a manager
  manager:
    ip: ec2-54-224-165-123.compute-1.amazonaws.com
    # default value in WLSetup is 4000 if no flag given
    manager_port:
    manager_waiting_port:
    # Choose a prefered port to spawn peer if not available, find_port will look for others
    default_spawn_port : 10000
  # First peer to spawn
  # A special name is manager to spawn a lightweight server used to launch other peers
  peer:
    # name for the current peer, could be overrride by the ENV['USERNAME'] variable
    username: manager
    protocol: http
    ip: localhost
    # store the port on which the web server listen for requests, you can give a
    # default value to this otherwise find_port if not available or by the manager
    # default_spawn_port if this peer has been launched by a manager
    web_port: 4000
    # default value for the port on which the webdamlog engine listen although it
    # will be defined by find_port if not available or by the manager
    # default_spawn_port if this peer has been launched by a manager
    wdl_engine_port:
    #Which program is loaded by default by the peer.
    #app/assets/wlprogram/bootstrap_program.wl
    program:
      file_path: app/assets/wlprogram/bootstrap_program.wl
      query_sample: config/scenario/samples/query/sample.yml