Delegation example :

@j :
des@j($x,$z):-des1@j($x,$y),des2@j($y,$x),des@e($y,$z)


TODO :
0. @j : Stack up all local relations until a non local one is found. Convert rule into : tmp@e($x,$y):-des1@j($x,$y),des2@j($y,$x)
1. @j : put facts from tmp@j($x,$y) into packet
2. @j : put following rule to e : tmp_at_j rule des@j($x,$z):-tmp_at_j@e($x,$z),des@e($y,$z) into packet.
3. @j : send packet (which may contain other rule information).
4. @e : upon packet receival, split the rule string just before the rule keyword.
5. @e : create tmp_at_j table.
6. @e : parse the rule, repeat the process from step 0 if the rule is still a delegation 
6. @e : execute the rule.

Example :
@j : start with     : out@j($x,$y,$z):-r@j($x),r@e($y),r@a($z)
@j : add new rule   : tmp_from_j@e($x):-r@j($x)
@j : send rule to @e: out@j($x,$y,$z):-tmp_from_j@e($x),r@e($y),r@a($z)
@e : add new rule   : tmp_from_e@a($x,$y):-tmp_from_j@e($x),r@e($y)
@e : send rule to @a: out@j($x,$y,$z):-tmp_from_e@a($x,$y),r@a($z)
@a : execute rule   : done.

================================================================================================================

