#-*- mode: org; comment-column: 50; fill-column: 65; -*-
#+STARTUP: content
#+STARTUP: indent

* Root of the WePim project: implementation for SIGMOD12 demo

** Git reminder

*** Get a copy of the project
#+begin_src sh
git clone git+ssh://emilien@scm.gforge.inria.fr//gitroot/webdamsystem/webdamsystem.git
#+end_src

* Some instruction to install wepic

** Requirement

*** ruby 1.8.7 (2011-06-30 patchlevel 352) [i686-linux]
installed via .deb package

*** gem 1.7.2
installed via .deb package

*** rails (3.2.9, 3.2.8)
it seems that needed version is 3.2.8 but it may work with next
version

+ 3.2.8 :: installed thanks to gem

+ 3.2.9 :: installed in the dependency while executing
: bundle install
at the root of the project (see next section)

*** download the project via git

: git clone git+ssh://emilien@scm.gforge.inria.fr//gitroot/webdamsystem/webdamsystem.git

*** install rmagick

should be installed thanks to the gem, however it requires many
non-usual libs on your machine that you may not have:
+ build-essential
+ imagemagick
+ libmagickcore-dev
+ libmagickwand-dev
+ ruby-full :: is ruby1.8 + ruby-dev

once you have installed all this stuff lauch
: gem install rmagick

*** install sqlite3

install .deb package
+ sqlite3
+ sqlite3-dev

*** install postgres

See also [[file:~/document/notes/it/database.org::*postgres][postgres]]

install the *postgresql* meta-package which install in their last
version
+ postgresql-client-9.1
+ postgresql-server
+ libpq-5
+ postgresql-common
+ postgresql-common-sever

Ruby
: gem install pg

also install
+ postgresql-server-dev-9.1 (to make the gem work)

run the script posgtres_init_script at the root of the project

optionally run rails --reset

*** install dependencies with bundle

Go to the root of you project (prevously retrieved from git repo)
: bundle install

The previous command start to install lots of gems

Now you can see what and where gems have been installed by
bundle.
: bundle show


** Launch the peer

at the root of the project start
: rails s -p 3100

the default port for the manager is written in
=config/properties.yml=

See exemple
#+begin_src conf
communication:
  manager_port : 3100
  default_spawn_port : 3200
#+end_src


* Amazon


** Install rvm
: \curl -L https://get.rvm.io | bash -s stable --rails

Restart or
: `source /home/ubuntu/.rvm/scripts/rvm`

Install 1.9.3
: rvm install 1.9.3
And use it by default
: rvm --default use 1.9.3


** Set environment
To set the language environment:
+ locale :: list your current locales
+ sudo locale-gen en_US.UTF-8 :: reconfigure locale to use en_US
+ sudo dpkg-reconfigure locales :: reconfigure the package
Ref: http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue


** Set up package required
Set language environment to avoid warning (in your bashrc) for
the following
: export LANG=en_US
: sudo apt-get install language-pack-en
: sudo apt-get install git
: sudo apt-get install build-essential imagemagick libmagickcore-dev libmagickwand-dev
: sudo apt-get install postgresql postgresql-server-dev-9.1

*** Postgres setup

Setup your databases via ./postgres_init_script.sh
#+begin_src
    Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges
------------+----------+----------+-------------+-------------+-----------------------
 postgres   | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
 template0  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
            |          |          |             |             | postgres=CTc/postgres
 template1  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
            |          |          |             |             | postgres=CTc/postgres
 wp_manager | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
#+end_src


sudo emacs /etc/postgresql/9.1/main/pg_hba.conf
#+begin_src
# Database administrative login by Unix domain socket
local   all             postgres                                trust

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            md5
# IPv6 local connections:
host    all             all             ::1/128                 md5
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local   replication     postgres                                peer
#host    replication     postgres        127.0.0.1/32            md5
#host    replication     postgres        ::1/128                 md5
#+end_src
restart postgres: sudo /etc/init.d/postgresql restart


** Set up connection
Set up your ssh key with inria gforge if needed git repo:
+ https://gforge.inria.fr/account/ in account maintenance I used
  the key "id_rsa_amaz"
+ or use the github repository:
  git@github.com:Emilien-Antoine/webdamlog-wepic.git


** finishing to install wepic dependance

launch bundle in your rails root (everything should succed)


** Additional package

*** Add ac2-api-tools from multiverse

https://help.ubuntu.com/community/Repositories/CommandLine#Adding_the_Universe_and_Multiverse_Repositories

+ edit /etc/apt/source.list
+ uncomment:
  #+begin_src
  deb http://us.archive.ubuntu.com/ubuntu/ hardy multiverse
  deb-src http://us.archive.ubuntu.com/ubuntu/ hardy multiverse
  deb http://us.archive.ubuntu.com/ubuntu/ hardy-updates multiverse
  deb-src http://us.archive.ubuntu.com/ubuntu/ hardy-updates multiverse
  #+end_src
+ install: ec2-api-tool package


